name: Check Caddy Releases and Build Docker Image

on:
  schedule:
    - cron: '*/5 * * * *' # Runs every 5 minutes
  workflow_dispatch: # Allows manual triggering

jobs:
  check-caddy-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests

      - name: Check and compare Caddy release
        id: check_release
        env:
          PREVIOUS_VERSION: ${{ secrets.PREVIOUS_VERSION }}
        run: python scripts/check_caddy_release.py
      
      - name: Build and push Docker image
        if: env.NEW_RELEASE == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/caddy-cloudflare-docker:${{ env.NEW_VERSION }}
            ghcr.io/${{ github.repository_owner }}/caddy-cloudflare-docker:latest

      - name: Clean up Docker images
        if: env.NEW_RELEASE == 'true'
        run: |
          docker rmi ghcr.io/${{ github.repository_owner }}/caddy-cloudflare-docker:${{ env.NEW_VERSION }} || true
          docker builder prune --force

      - name: Update previous version secret
        if: env.NEW_RELEASE == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEW_VERSION: ${{ env.NEW_VERSION }}
        run: |
          echo "New version detected, updating PREVIOUS_VERSION secret..."
          echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
          gh secret set PREVIOUS_VERSION --body "${NEW_VERSION}"

      - name: Notify about new release
        if: env.NEW_RELEASE == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `A new Caddy version (${env.NEW_VERSION}) has been released and a new Docker image has been built and pushed.`
            })
      
      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `The workflow to check for new Caddy releases and build the Docker image has failed. Please check the logs for details.`
            })
